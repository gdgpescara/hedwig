---


---
<script>
  import { inMemoryPersistence } from "firebase/auth";
  import firebase from "firebase/compat/app";
  import * as firebaseui from "firebaseui";
  import "firebaseui/dist/firebaseui.css";
  import { auth } from "../firebase/client";

  const uiConfig = {
    signInOptions: [
      firebase.auth.GoogleAuthProvider.PROVIDER_ID,
      firebase.auth.EmailAuthProvider.PROVIDER_ID,
      'apple.com'
    ],
    tosUrl: "terms-of-service",
    privacyPolicyUrl: function () {
      window.location.assign("privacy-policy");
    },
    callbacks: {
      signInSuccessWithAuthResult: function(authResult: any, redirectUrl?: string) {
        document.getElementById("firebaseui-error-container")?.querySelectorAll("*").forEach(n => n.remove());
        return false;
      },
      signInFailure: function(error: firebaseui.auth.AuthUIError) {
        const errorSpan = document.createElement('span');
        errorSpan.textContent = `Error while signin in.\nCode: ${error.code}\nMessage: ${error.message}`;
        document.getElementById('firebaseui-error-container')?.append(errorSpan);
      },
    }
  };

  // Initialize the FirebaseUI Widget using Firebase.
  const ui = new firebaseui.auth.AuthUI(auth);

  // This will prevent the browser from storing session data
  auth.setPersistence(inMemoryPersistence);

  auth.onAuthStateChanged(async function(user) {
    if (user) {
      // User is signed in.
      const accessToken = await user.getIdToken();

      const response = await fetch("/api/auth/signin", {
      method: "GET",
        headers: {
          Authorization: `Bearer ${accessToken}`,
        },
      });

      if (response.redirected) {
        window.location.assign(response.url);
      }
      
    }
  }, function(error) {
    const errorSpan = document.createElement('span');
    errorSpan.textContent = `Error while signin in.\n ${error}`;
    document.getElementById('firebaseui-error-container')?.append(errorSpan);
  });

  const divId = "firebaseui-auth-container";
  if (document.getElementById(divId)) {
    ui.start(`#${divId}`, uiConfig);
  }

</script>
<div id="firebaseui-error-container"></div>
<div id="firebaseui-auth-container"></div>
